name: Build and tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and tests
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENV_NAME: 'stage'
      AWS_REGION: 'us-west-2'
      AWS_ENDPOINT: 'http://localhost:4566'
      AWS_S3_BUCKET: 'cine-ticket-manager-development-bucket'
      AWS_ACCESS_KEY_ID: 'cine-ticket-manager-test'
      AWS_SECRET_ACCESS_KEY: 'cine-ticket-manager'
      DB_HOST: 'localhost'
      DB_PORT: 5432
      DB_USER: 'postgres'
      DB_PASS: 'postgres'
      DB_DATABASE: 'cine-ticket-manager-test'
      DB_DATABASE_TEST: 'cine-ticket-manager-test'
      JWT_SECRET: 'cine-ticket-manager-test'

    services:
      postgres:
        image: postgres:15.3
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: cine-ticket-manager-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      localstack:
        image: localstack/localstack
        env:
          AWS_ACCESS_KEY_ID: cine-ticket-manager-test
          AWS_SECRET_ACCESS_KEY: cine-ticket-manager
          AWS_DEFAULT_REGION: us-west-2
          AWS_DEFAULT_OUTPUT: json
          DATA_DIR: /tmp/localstack/data
          DEBUG: 1
          DOCKER_HOST: unix:///var/run/docker.sock
          SERVICES: s3
        ports:
          - 4566:4566
          - 4510-4559:4510-4559
        volumes:
          - init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npx eslint "{src,apps,libs,test}/**/*.ts"

      - name: Build
        run: npm run build

      - name: Run Unit Tests
        run: npm run test:cov -- --passWithNoTests

      - name: Preparing for the e2e test
        run: node .github/e2e-util.js

      - name: Run e2e Tests
        run: npm run test:e2e -- --passWithNoTests

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
